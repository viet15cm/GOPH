@model CartController.ViewCartModel

@{
    Layout = "~/Views/Shared/_LayoutTop.cshtml";
    var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
}
<div class="container">

    <div class="title">
        <i class="bi bi-cart-check"></i> Giỏ hàng
    </div>
    <div id="shopping-cart" class="shopping-cart">
   
            @await Html.PartialAsync("_ItemCartPartial", Model.ProductCarts )
    </div>

   

</div>

@section MenuSmallGroups{
    @await Component.InvokeAsync(MenuGroups.COMPONENTNAME,
             new MenuGroups.Menu()
             {
                 Groups = Model.Groups,
             })
}

@section Scripts{
    <script>

        var timeout = null;
        function increaseCount(id, object) {
            var input = object.previousElementSibling;
          
            var value = parseInt(input.value, 10);
            value = isNaN(value) ? 0 : value;
            value++;
            input.value = value;

            clearTimeout(timeout);

            timeout = setTimeout(function () {
                updatecart(id, input.value);
            }, 500);
           
      
        }
        function resetData() {
            count = 0;
            isAlreadyInProcess = false;
        }


        function decreaseCount(id, object) {
            var input = object.nextElementSibling;
           
            var value = parseInt(input.value, 10);
            if (value > 1) {
                value = isNaN(value) ? 0 : value;
                value--;
                input.value = value;
                clearTimeout(timeout);

                timeout = setTimeout(function () {
                    updatecart(id, input.value);
                }, 500);
               
            }
        }

    
      
        function deletCart(object, id) {

            var load = document.getElementById('modal-all');
            load.style.display = "block";
            debugger
            $.ajax({
                url: domain + '/home/deletecart',
                contentType: 'application/html; charset=utf-8',
                data: { id: id },
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    debugger

                    var c = response.countItem;
                    $(".icon-item-count-cart").text(c);
                    $('#shopping-cart').empty();
                    $('#shopping-cart').html(response.returnHtml);

                    load.style.display = "none";
                    
                    debugger
                },
                error: function (response) {
                    debugger
                    alert("lỗi liên hệ admin");
                }
            });
        }

        function updatecart(id, count) {
            var load = document.getElementById('modal-all');
            load.style.display = "block";
            $.ajax({
                url: domain + '/home/AddCountCart',
                contentType: 'application/html; charset=utf-8',
                data: { id: id, count: count },
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    debugger

                    var c = response.countItem;
                    $(".icon-item-count-cart").text(c);
                    $('#shopping-cart').empty();
                    $('#shopping-cart').html(response.returnHtml);
                    load.style.display = "none";
                    //myAlertBottom(response.message);
                },
                error: function (response) {
                    debugger
                    alert(response);
                }
            });
           
        }
    </script>
}

                    