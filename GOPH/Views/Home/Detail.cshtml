@model HomeController.ViewModel
@{
    Layout = "~/Views/Shared/_LayoutProduct.cshtml";
    ViewData["Title"] = Model.ProductDetailDto.Name;

    var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
    var url = ViewData["curenturl"] as string;

    var count = 1;
}

<div class="bd-right-main-product">
    <input type="hidden" id="router-id" value="@Model.GroupId" />
    <div class="curent-product row">
        <div class="col-md-7 left-side-card">
            <div class="heading-card-title mt-4">
                <h3><i class="bi bi-bookmarks text-dark"></i> @Model.ProductDetailDto.CommodityGroup.Name</h3>

            </div>
            <div class="row mt-3 mb-3">
                <div class="col-md-6">
                    <div class="lenovo-brand ml-4">
                        <div class="share-button mr-5">
                            <div id="fb-root"></div>
                            <script>
                                (function (d, s, id) {
                                    var js, fjs = d.getElementsByTagName(s)[0];
                                    if (d.getElementById(id)) return;
                                    js = d.createElement(s); js.id = id;
                                    js.src = "https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0";
                                    fjs.parentNode.insertBefore(js, fjs);
                                }(document, 'script', 'facebook-jssdk'));</script>

                            <!-- Your share button code -->
                            <div class="fb-share-button"
                                 data-href="@url"
                                 data-layout="button_count">
                            </div>
                        </div>
                    </div>
                </div>
                <div  class="col-md-6">
                   
                </div>
            </div>
            <div class="product-detail-tumb">
                <div class="container">
                    @if (Model.ProductDetailDto?.Images.Count > 0)
                    {
                        foreach (var img in Model.ProductDetailDto?.Images)
                        {
                            <div class="mySlides">
                                <div class="numbertext">1 / @count</div>
                                <img src="~/ImageManager/ProductImg/@img.Url" style="width:100%">
                            </div>

                            count += 1;
                        }
                        <a class="prev" onclick="plusSlides(-1)">❮</a>
                        <a class="next" onclick="plusSlides(1)">❯</a>

                        @* <div class="caption-container">
                            <p id="caption"></p>
                        </div>*@
                        count = 1;
                        <div class="row">
                            
                            @foreach (var img in  Model.ProductDetailDto?.Images)
                            {
                                <div class="column">
                                    <img class="demo cursor" src="~/ImageManager/ProductImg/@img.Url" style="width:100%" onclick="currentSlide(@count)" alt="The Woods">
                                </div>
                                count += 1;
                            }
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(Model.ProductDetailDto.UrlImage))
                    {
                        <div class="mySlides">
                            <div class="numbertext">1 / 1</div>
                            <img src="@Model.ProductDetailDto.UrlImage" style="width:100%">
                        </div>

                    }else
                    {
                        <div class="mySlides">
                            <div class="numbertext">1 / 1</div>
                            <img src="~/Image/goph.jpg" style="width:100%">
                        </div>

                    }

                 </div>
            </div>

            <div class="container mt-3">
                <div class="price-tag">
                    @if (Model.ProductDetailDto.IsPrice)
                    {
                        @if (@Model.ProductDetailDto.Promotion > 0)
                        {
                            <small style="text-decoration: line-through;">@String.Format(format, "{0:c0}", @Model.ProductDetailDto.Price )</small>
                        }
                        <span class="amount mx-1"> @String.Format(format, "{0:c0}",  @Model.ProductDetailDto.Price - (@Model.ProductDetailDto.Price * Model.ProductDetailDto.Promotion) / 100) </span>
                        @if (Model.ProductDetailDto.isWholesale)
                        {

                            <span class="badge rounded-pill bg-danger">(Giá sỉ)</span>
                          
                           
                        }
                         @if (Model.ProductDetailDto.Promotion > 0)
                        {

                            <span class="badge rounded-pill bg-danger">Giảm : @Model.ProductDetailDto.Promotion%</span>
                           
                        }
                    }
                    
                </div>
                <div class="submit-add-cart mt-1">
                    <div class="counter">
                        <button onClick='decreaseNumber(event, this)' class="minus-btn" type="button" name="button">
                            -
                        </button>

                        <input type="number" id="count-number" name="name" value="1">
                        <button onClick='increaseNumber(event, this)' class="plus-btn" type="button" name="button">
                            +
                        </button>
                    </div>

                    <div class="add-to-cart-button">
                        <button onclick='submitAddCart(this,`@Model.ProductDetailDto.Id`)' class="btn btn-primary"><i class="bi bi-cart-plus-fill"></i> Thêm vào giỏ</button>
                    </div>
                </div>
               
            </div>

        </div>
        <!-- right side card -->
        <div class="col-md-5 pb-2 right-side-card">
            <div class="main-card">
                
                <div class="heading-card-title-info mt-4">
                    <h1>@Model.ProductDetailDto.DisplayName</h1>
                </div>
                <div class="card-product-info pt-3">
                    <h5>Mô tả : </h5>
                    <hr />
                    <div class="information">
                        <p class="fw-bold">
                            @Model.ProductDetailDto.Name
                        </p>
                        @if (string.IsNullOrEmpty(Model.ProductDetailDto.Description))
                        {
                          <p>Xin lỗi hiện nhà thuốc chưa cập nhật thông tin về sản phẩm này , Mời bạn đến nhà thuốc để nghe các dược sĩ tư vấn , hoặt gọi qua host phone bên dưới.</p>
                           
                        }else
                        {
                            @Html.Raw(Model.ProductDetailDto.Description)
                        }
                      
                    </div>
                    
                </div>
               
            </div>
        </div>
        <div class="content">

            <h5>Thông tin chi tiết : </h5>
            <hr />
            @if (string.IsNullOrEmpty(Model.ProductDetailDto.Content))
            {
                <p>
                    Sản phẩm hiện đang bày bán tại quầy , liên hệ host phone bên dưới để được tư vấn.
                </p>
            }else
            {
                @Html.Raw(Model.ProductDetailDto.Content)
            }
            
        </div>
    </div>
  </div>



<div class="list-card-product">
    <img src="~/image/san-pham-ban-chay.svg" />
    <h2 class="special-offer-banner">Sản phẩm tương tự</h2>
    <div id="list-card-product" class=" cards">
        @await Html.PartialAsync("_CardProducts", Model.Products )
    </div>

</div>
@section MenuGroups {
    @await Component.InvokeAsync(MenuGroups.COMPONENTNAME,
             new MenuGroups.Menu()
             {
                 CurentGroup = Model.CurentGroup,
                 Groups = Model.Groups,
                 GroupId = Model.GroupId,
                 listSerialUrl = Model.listSerialUrl

             })
}

@section Scripts{
    <script>
        let slideIndex = 1;
        showSlides(slideIndex);
      
        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

        function showSlides(n) {
            let i;
            let slides = document.getElementsByClassName("mySlides");
            let dots = document.getElementsByClassName("demo");
            let captionText = document.getElementById("caption");
            if (n > slides.length) { slideIndex = 1 }
            if (n < 1) { slideIndex = slides.length }
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            for (i = 0; i < dots.length; i++) {
                dots[i].className = dots[i].className.replace(" active", "");
            }
            slides[slideIndex - 1].style.display = "block";
            dots[slideIndex - 1].className += " active";
            captionText.innerHTML = dots[slideIndex - 1].alt;
        }
    </script>

    <script type="text/javascript">
        function increaseNumber(a, b) {
            var input = b.previousElementSibling;
            var value = parseInt(input.value, 10);
            value = isNaN(value) ? 0 : value;
            value++;
            input.value = value;
        }
        function decreaseNumber(a, b) {
            var input = b.nextElementSibling;
            var value = parseInt(input.value, 10);
            if (value > 1) {
                value = isNaN(value) ? 0 : value;
                value--;
                input.value = value;
            }
        }


        var numbercount = document.getElementById('count-number');

        function submitAddCart(object, id) {

            var number = numbercount.value;
            var load = document.getElementById('modal-all');
            load.style.display = "block";
            $.ajax({
               
                url: domain + '/cart/addtocart',
                contentType: 'application/html; charset=utf-8',
                data: { id: id, count: number },
                type: 'GET',
                dataType: 'json',
                success: function (response) {

                    load.style.display = "none";
                    $(".icon-item-count-cart").text(response.countItem);
                    myAlertBottom(response.message);
                },
                error: function (response) {

                    alert(response);
                }
            });

        }

        
    </script>

    <script src="~/js/addtocart.js"></script>

    <script src="~/js/scrollbarsohowproduct.js"></script>
}

@section CurentLink{
    <li><a>/</a></li>
    <li>
        <a asp-controller="home" asp-action="group" asp-route-group="@Model.ProductDetailDto.Id">@Model.ProductDetailDto.CommodityGroup.Name</a>
    </li>
    <li><a>/</a></li>
    <li>
        <a asp-controller="home" asp-action="detail" asp-route-id="@Model.ProductDetailDto.Id">@Model.ProductDetailDto.Name</a>
    </li>
    
}

@section MenuSmallGroups{
    @await Component.InvokeAsync(MenuGroups.COMPONENTNAME,
             new MenuGroups.Menu()
             {
                 Groups = Model.Groups,
             })
}


@section FacebookSharedHead{
    <meta property="og:url" content="@url" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@Model.ProductDetailDto.Name" />
    <meta property="og:description" content="@Model.ProductDetailDto.Description" />
    <meta property="og:image" content="@Model.ProductDetailDto.UrlImage" />
}


